//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Xml.Serialization;
using System.Collections.Generic;
using System.IO;

namespace SingDictionaryWPF
{
    [SerializableAttribute()]
    [XmlTypeAttribute]
    [XmlRootAttribute]
    public class Dictionary
    {
        private static Dictionary instance;

        //return singleton dictionary object
        //initialize dictionary
        public static Dictionary Instance
        {
            get
            {
                if (instance == null)
                {
                    XmlSerializer xs = new XmlSerializer(typeof(Dictionary));
                    using (Stream s = File.OpenRead(@"./data/dict.xml"))
                        instance = (Dictionary)xs.Deserialize(s);

                    //init videos structure
                    foreach (Word w in instance.Words)
                    {


                        w.VideoDict = new Dictionary<string, Dictionary<string, Video>>();
                        foreach (Video v in w.Videos)
                        {
                            //v.Uri = new Uri(v.FullPath);

                            if (!w.VideoDict.ContainsKey(v.version))
                                w.VideoDict.Add(v.version, new Dictionary<string, Video>());

                            if (!w.VideoDict[v.version].ContainsKey(v.orientation))
                                w.VideoDict[v.version].Add(v.orientation, v);
                        }

                    }
                }
                return instance;
            }
        }


        private Dictionary() { }

        private List<Word> itemsField;

        [XmlElementAttribute("Word")]
        public List<Word> Words
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }
    }

}




